<?xml version="1.0" encoding="UTF-8"?>
<project name="DemoApp" default="build">
 <target name="build" depends="prepare,lint,phploc-ci,pdepend,phpmd-ci"/>

 <target name="clean" unless="clean.done" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
  <delete dir="${basedir}/build/phpdox"/>
  <property name="clean.done" value="true"/>
 </target>

 <target name="prepare" unless="prepare.done" depends="clean" description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <property name="prepare.done" value="true"/>
 </target>
 
 <target name="composer" depends="prepare" description="Get Composer Dependencies">
  <exec executable="/usr/local/bin/composer">
   <arg value="update" />
  </exec>
 </target>
 
 <target name="phpunit" depends="prepare" description="Run unit tests with PHPUnit">
  <exec executable="/usr/bin/phpunit" failonerror="true">
   <arg value="--configuration"/>
   <arg path="${basedir}/phpunit.xml"/>
  </exec>
 </target>
 
 
 <target name="lint">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/app">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="/usr/bin/phploc">
   <arg value="--count-tests" />
   <arg path="${basedir}/app" />
  </exec>
 </target>
 
 <target name="phploc-ci" depends="prepare" description="Measure project size using PHPLOC and log result in CSV and XML format">
  <exec executable="/usr/bin/phploc">
   <arg value="--count-tests" />
   <arg value="--log-csv" />
   <arg path="${basedir}/build/logs/phploc.csv" />
   <arg value="--log-xml" />
   <arg path="${basedir}/build/logs/phploc.xml" />
   <arg path="${basedir}/app" />
  </exec>
 </target>
 
  <target name="pdepend" depends="prepare" description="Calculate software metrics using PHP_Depend">
  <exec executable="/usr/bin/phploc">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpmd" description="Perform project mess detection using PHPMD and print result in text format">
  <exec executable="/usr/bin/phpmd">
   <arg path="${basedir}/app" />
   <arg value="text" />
   <arg path="${basedir}/build/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci" depends="prepare" description="Perform project mess detection using PHPMD and log result in XML format">
  <exec executable="/usr/bin/phpmd">
   <arg path="${basedir}/app" />
   <arg value="xml" />
   <arg path="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg path="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>
 
 <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print result in text format">
  <exec executable="/usr/bin/phpcs">
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpcs-ci" depends="prepare" description="Find coding standard violations using PHP_CodeSniffer and log result in XML format">
  <exec executable="/usr/bin/phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/app" />
  </exec>
 </target>
 
 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="/usr/bin/phpcpd">
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpcpd-ci" depends="prepare" description="Find duplicate code using PHPCPD and log result in XML format">
  <exec executable="/usr/bin/phpcpd">
   <arg value="--log-pmd" />
   <arg path="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/app" />
  </exec>
 </target>
 
 <target name="phpdox" depends="phpunit" description="Generate API documentation using phpDox">
  <exec executable="${basedir}/build/tools/phpdox.phar" dir="${basedir}/build"/>
 </target>
 
  <target name="zpk">
    <exec command="/usr/bin/zs-client packZpk --folder='${basedir}' --destination='${basedir}' --name='DemoApp.zpk'"/>
  </target>
 
  <target name="deploy" depends="zpk">
    <exec command="/usr/bin/zs-client installApp --zpk='${basedir}/DemoApp.zpk' --baseUri='${base}' --userParams='${params}' --target='${target}'"/>
  </target>
 
</project>
